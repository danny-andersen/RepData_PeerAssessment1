install.packages("rJava", lib="/usr/lib/R/library")
install.packages("rJava", lib="/usr/lib/R/library")
install.packages("rJava", lib="/usr/lib/R/site-library")
install.packages("rJava", lib="/usr/lib/R/site-library")
?par
par()
par(mei)
par(mai)
par("mai")
par("mar")
?heat.colors()
image(volcano)
heat.colours(10)
heat.colors(10)
topo.colors()
topo.colors(10)
?topo.colors(10)
image(volcano,col = rainbow(10))
image(volcano,col = rainbow(20))
image(volcano,col = rainbow(30))
image(volcano,col = heat.colors(30))
library(RColorBrewer)
display.brewer.all()
x<- brewer.pal(3,"BuPu")
x
p <- colorRampPalette(x)
p
p(10)
brewer.pal(2,"BuPu")
image(volcano, col = p(10))
image(volcano, col = p(20))
image(volcano, col = p(5))
image(volcano, col = p(2))
image(volcano, col = p(3))
image(volcano, col = p(4))
image(volcano, col = p(5))
image(volcano, col = p(7))
image(volcano, col = p(10))
image(volcano, col = p(15))
image(volcano, col = p(10))
x<-rnorm(1000)
y<-rnorm(1000)
plot(x,y)
summary(x)
?rnorm
hist(x)
hist(y)
hist(x,breaks=50)
sd(x)
smoothScatter(x,y)
?par()
par(mfrow(1,2))
par(mfrow=c(1,2))
plot(x,y)
smoothScatter(x,y)
par(mfrow=c(1,2))
par(mfrow=c(2,1))
plot(x,y)
smoothScatter(x,y)
par(mar = c(1,1,1,1))
plot(x,y)
smoothScatter(x,y)
par(mar = c(2,2,1,1))
plot(x,y)
smoothScatter(x,y)
par(mar = c(3,3,2,1))
plot(x,y)
smoothScatter(x,y)
par(mar = c(2,3,2,1))
plot(x,y)
smoothScatter(x,y)
par(mfrow=c(1,1))
plot(x,y)
plot(x,y, pch=19)
plot(x,y, pch=19, col= rgb(0,0,0,0.15)
)
par(mfrow=c(2,1))
plot(x,y, pch=19)
plot(x,y, pch=19, col= rgb(0,0,0,0.15))
set.seed(1234)
?rnorm
rep(1:3)
rep(1:3, each = 4)
rnorm(10,3)
x<-rnorm(10,3)
hist(x)
boxplot(x)
x<-rnorm(10,4)
boxplot(x)
x<-rnorm(100,4)
boxplot(x)
hist(x)
hist(x, breaks=20)
hist(x, breaks=10)
set.seed(1234)
x<-rnorm(12,rep(1:3, each = 4, 0.2)
)
x<-rnorm(12,rep(1:3, each = 4), 0.2)
hist(x)
boxplot(x)
summary(x)
set.seed(1234)
x<-rnorm(12,rep(1:3, each = 4), 0.2)
y<-rnorm(12,rep(1:3, each = 4), 0.2)
plot(x,y)
y<-rnorm(12,rep(c(1,2,1), each = 4), 0.2)
plot(x,y)
plot(x,y, pch=19)
plot(x,y, pch=19, col="blue")
text(x+0.05,y+0.05, labels=as.character(1:12))
?text
df <- data.frame(x=x, y=y)
dist(df)
plot(df)
plot(df, pch=19, col="blue")
rdistxy <- as.matrix(dist(df))
rdistxy
?as.matrix
diag(rdistxy)
?diag
min(distxy)
min(rdistxy)
?which
diag(rdistxy) <- diag(rdistxy) + 1000000
min(rdistxy)
which(min(rdistxy))
which(rdistxy == min(rdistxy))
rdistxy == min(rdistxy)
which(rdistxy == min(rdistxy), arr.ind = T)
length(rdistxy)
which(LETTERS == "R")
which(LETTERS == "A")
which(LETTERS == "A", arr.ind = T)
which(LETTERS == "R", arr.ind = T)
( m <- matrix(1:12, 3, 4) )
div.3 <- m %% 3 == 0
m
div.3
which(div.3)
which(div.3, arr.ind = T)
str(div.3)
summary(div.3)
which(rdistxy == min(rdistxy), arr.ind = T)
close<-which(rdistxy == min(rdistxy), arr.ind = T)
ind[1,]
close[1,]
plot(x[close[1,]],y[close[1,]], col="orange", pty=19)
plot(x,y, pch=19, col="blue")
text(x+0.05,y+0.05, labels=as.character(1:12))
plot(x[close[1,]],y[close[1,]], col="orange", pty=19)
plot(x,y, pch=19, col="blue")
text(x+0.05,y+0.05, labels=as.character(1:12))
points(x[close[1,]],y[close[1,]], col="orange", pty=19)
points(x[close[1,]],y[close[1,]], col="orange", pty=19, cex=2)
points(x[close[1,]],y[close[1,]], col="orange", pchisq()=19, cex=2)
points(x[close[1,]],y[close[1,]], col="orange", pch=19, cex=2)
library(dplyr)
?hclust
hc <- dist(df) %>% hclust
hc <- dist(df) %>% hclust()
hc
hc(1)
hc[1]
hc[2]
d <- as.dendrogram(hc)
d
plot(d)
plot(hc)
plot(d)
?as.dendrogram
plot(d)
plot(hc)
plot(d)
hc$height
hc$height[1]
?cut
?cut.dendrogram
cd <- cut(d, h=hc$height[1] + 0.00001)
cd
plot(cd)
cd$upper
cd$lower
cd$lower
hc <- df %>% dist %>% hclust
plot(hc)
rdistxy
diag(rdistxy) <- 0
rdistxy
heatmap(rdistxy)
heatmap(as.matrix(df))
df
as.matrix(df)
?pairs
?lm
setwd("~/Dropbox/Coursera/DataScience/Reproducible_Research/RepData_PeerAssessment1")
load("~/Dropbox/Coursera/DataScience/Reproducible_Research/RepData_PeerAssessment1/.RData")
library(dplyr)
url<-"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url,"activity.zip")
unzip("activity.zip")
activity<-read.csv("activity.csv",header = T)
activity<-mutate(activity, date=as.POSIXct(date,format="%Y-%m-%d"))
byDay <- group_by(activity,date) %>%
summarise(dailySteps = sum(steps, na.rm = T))
avgStepsPerDay <- mean(byDay$dailySteps)
medianStepsPerDay <- median(byDay$dailySteps)
hist(byDay$dailySteps, xlab = "Number of steps per day", ylab="How many days", main =
"Daily steps")
hist(byDay$dailySteps, xlab = "Number of steps per day", ylab="How many days", main = "Histogram of daily steps", breaks=10)
hist(byDay$dailySteps, xlab = "Number of steps per day", ylab="How many days", main = "Histogram of daily steps", breaks=20)
hist(byDay$dailySteps, xlab = "Number of steps per day", ylab="How many days", main = "Histogram of daily steps", breaks=20)
library("ggplot")
library(ggplot2)
qplot(dailySteps, data=byDay, geom="histogram")
byDay <- group_by(activity,date) %>%
summarise(dailySteps = sum(steps, na.rm = T)) %>%
filter(dailySteps != 0)
avgStepsPerDay <- mean(byDay$dailySteps)
medianStepsPerDay <- median(byDay$dailySteps)
hist(byDay$dailySteps, xlab = "Number of steps per day", ylab="How many days", main = "Histogram of daily steps", breaks=20)
hist(byDay$dailySteps, xlab = "Number of steps per day", ylab="How many days", main = "Histogram of daily steps", breaks=20)
str(byDay)
summary(byDay)
qplot(dailySteps, data=byDay, geom="histogram")
qplot(dailySteps, data=byDay, geom="histogram",  xlab = "Number of steps per day", ylab="How many days", main = "Histogram of daily steps")
qplot(x=date, y=dailySteps, data=byDay, geom="line")
qplot(x=date, y=dailySteps, data=byDay, geom="line") + geom_hline(aes(yintercept=avgStepsPerDay)
)
qplot(x=date, y=steps, data=activity, geom="line") + geom_hline(aes(yintercept=avgStepsPerDay)
)
head(activity, n=10)
head(activity[activity$date=="2012-10-02"], n=10)
head(activity[activity$date==as.Date("2012-10-02")], n=10)
head(activity[activity$date==as.POSIXlt("2012-10-02")], n=10)
head(activity[activity$date ==as.POSIXlt("2012-10-02")], n=10)
head(activity[activity$date=="2012-10-02",], n=10)
as.Date(5)
?difftime
hm <- mutate(activity, hm = ISOdatetime(1970,1,1,interval%%60,interval-(interval%%60)*60))
hm <- mutate(activity, hm = ISOdatetime(1970,1,1,interval%%60,interval-(interval%%60)*60),0)
hm <- mutate(activity, hm = ISOdatetime(1970,1,1,interval%%60,interval-(interval%%60)*60,0))
head(hm,n=10)
129%%60
129%/%60
hm <- mutate(activity, hm = ISOdatetime(1970,1,1,interval%/%60,interval%%60,0))
129%/%60
head(hm,n=10)
byInterval <- group_by(activity,interval) %>%
summarise(intervalSteps = sum(steps, na.rm = T)) %>%
mutate(activity, hm = ISOdatetime(1970,1,1,interval%/%60,interval%%60,0))
qplot(x=interval, y=intervalSteps, data=byDay, geom="line") +
geom_hline(aes(yintercept=avgStepsPerDay), xlab="Activity date", ylab="Daily steps")
byInterval <- group_by(activity,interval) %>%
summarise(intervalSteps = sum(steps, na.rm = T)) %>%
mutate(hm = ISOdatetime(1970,1,1,interval%/%60,interval%%60,0))
qplot(x=hm, y=intervalSteps, data=byDay, geom="line") +
geom_hline(aes(yintercept=avgStepsPerDay), xlab="Activity date", ylab="Daily steps")
byInterval <- group_by(activity,interval) %>%
summarise(intervalSteps = sum(steps, na.rm = T)) %>%
mutate(hm = ISOdatetime(1970,1,1,interval%/%60,interval%%60,0))
qplot(x=hm, y=intervalSteps, data=byInterval, geom="line", xlab="Activity date", ylab="Daily steps")
qplot(x=hm, y=intervalSteps, data=byInterval, geom="line", xlab="Activity date", ylab="Daily steps")
byInterval <- group_by(activity,interval) %>%
summarise(intervalSteps = mean(steps, na.rm = T)) %>%
mutate(hm = ISOdatetime(1970,1,1,interval%/%60,interval%%60,0))
qplot(x=hm, y=intervalSteps, data=byInterval, geom="line", xlab="Activity date", ylab="Daily steps")
byInterval <- group_by(activity,interval) %>%
summarise(intervalSteps = mean(steps, na.rm = T)) %>%
mutate(hm = ISOdatetime(1970,1,1,interval%/%60,interval%%60,0)) %>%
mutate(time = strftime(hm,format="%H:%M"))
head(head,byInterval)
head(byInterval)
byInterval <- group_by(activity,interval) %>%
summarise(intervalSteps = mean(steps, na.rm = T)) %>%
mutate(hm = ISOdatetime(1970,1,1,interval%/%60,interval%%60,0)) %>%
mutate(hm = strftime(hm,format="%H:%M"))
qplot(x=hm, y=intervalSteps, data=byInterval, geom="line", xlab="Activity date", ylab="Daily steps")
byInterval <- group_by(activity,interval) %>%
summarise(intervalSteps = mean(steps, na.rm = T)) %>%
mutate(hm = ISOdatetime(1970,1,1,interval%/%60,interval%%60,0)) %>%
mutate(hm = strftime(hm,format="%H:%M"))
qplot(x=hm, y=intervalSteps, data=byInterval, geom="line", xlab="Activity date", ylab="Daily steps")
byInterval <- group_by(activity,interval) %>%
summarise(avgSteps = mean(steps, na.rm = T)) %>%
mutate(hm = ISOdatetime(1970,1,1,interval%/%60,interval%%60,0)) %>%
mutate(hm = strftime(hm,format="%H:%M"))
qplot(x=hm, y=avgSteps, data=byInterval, geom="line", xlab="Activity date", ylab="Daily steps")
head(byInterval)
summarize((byInterval))
summarize(byInterval)
summary(byInterval)
summary(byInterval)
byInterval <- group_by(activity,interval) %>%
summarise(avgSteps = mean(steps, na.rm = T)) %>%
mutate(hm = ISOdatetime(1970,1,1,interval%/%60,interval%%60,0)) %>%
mutate(hmc = strftime(hm,format="%H:%M"))
qplot(x=hm, y=avgSteps, data=byInterval, geom="line", xlab="Activity date", ylab="Daily steps")
plot(byInterval$hm,byInterval$avgSteps,type="l")
plot(byInterval$hm,byInterval$avgSteps,type="l", xlab="Time of day", ylab="Avg steps", main="Average activity by time of day")
maxInterval <- byInterval[avgSteps==max(byInterval$avgSteps),"interval"][0]
maxInterval <- byInterval[byInterval$avgSteps==max(byInterval$avgSteps),"interval"][0]
a
maxInterval
maxInterval <- byInterval[byInterval$avgSteps==max(byInterval$avgSteps),"interval"]
maxInterval
maxInterval <- byInterval[byInterval$avgSteps==max(byInterval$avgSteps),"interval"][1]
maxInterval
maxInterval <- byInterval[byInterval$avgSteps==max(byInterval$avgSteps),"interval"][[1]]
maxInterval
maxInterval[,"hmc"]
maxInterval <- byInterval[byInterval$avgSteps==max(byInterval$avgSteps),"interval"]
maxInterval[,"hmc"]
maxInterval <- byInterval[byInterval$avgSteps==max(byInterval$avgSteps),c("interval","hmc")]
maxInterval[,"hmc"]
maxInterval[[,"hmc"]]
maxInterval[[1,"hmc"]]
